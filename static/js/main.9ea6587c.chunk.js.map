{"version":3,"sources":["components/form.component.jsx","components/weather.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["From","props","className","onSubmit","cityFrom","type","name","placeholder","autoComplete","Weather","toCelsius","temp","celsius","Math","round","console","log","error","class","role","setCityandcountry","icon","src","alt","maxtemp","mintemp","desc","App","useState","undefined","setIcon","cityandcountry","setMintemp","setMaxtemp","setTemp","setDesc","setError","getWeather","e","a","preventDefault","city","target","elements","value","country","axios","get","then","response","data","weather","sys","main","temp_min","temp_max","description","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ea6587c.chunk.js","sourcesContent":["import React from 'react';\nimport './form.style.css';\n\nconst From = (props) => {\n\n    return(\n        <div className=\"container from-group\">\n            <form onSubmit={props.cityFrom}>\n                <div className=\"row form_bloc mt-4 px-4\">\n                    <input type=\"text\" name=\"city\" className=\"form-control col-md-3 col-xs-12 mt-3 weather_input\" placeholder=\"City\" autoComplete=\"off\"/>\n                    <input type=\"text\" name=\"country\" className=\"form-control col-md-3 col-xs-12 mt-3 weather_input\" placeholder=\"Country\" autoComplete=\"off\"/>\n                    <button className=\"btn btn-warning col-md-3 col-xs-12 mt-3\">Get Weather</button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\n\nexport default From;","import React from 'react';\nimport './weather.style.css';\n\nconst Weather = (props) => {\n\n    const toCelsius = (temp) => {\n        let celsius = temp - 273.15;\n        return Math.round(celsius);\n    }\n\n    return(\n        <div className=\"container mt-5\">\n            {console.log(props.error)}\n            {props.error ? (<div class=\"alert alert-danger\" role=\"alert\">City or Country fields are empty or invalids !</div>) : \"\"}\n            <h1 className=\"mt-4 text-light\">{props.setCityandcountry}</h1>\n            {props.icon ? (<img src={`http://openweathermap.org/img/wn/${props.icon}@2x.png`} alt=\"weather\"/>) : \"\"}\n            {/* <h2 className=\"celious mt-5 text-light\">{props.temp ? toCelsius(props.temp)+\"&deg;\" : \"\"}</h2> */}\n            {props.temp?(<h2 className=\"celious mt-5 text-light\">{toCelsius(props.temp)}&deg;</h2>) : \"\"}\n\n            <h2 className=\"minmaxcelcious mt-5\">\n                {props.temp?(<span className=\"min_degree px-4 text-light\">{toCelsius(props.maxtemp)}&deg;</span>) : \"\"}\n                {props.temp?(<span className=\"max_degree px-4 text-light\">{toCelsius(props.mintemp)}&deg;</span>) : \"\"}\n            </h2>\n            <div className=\"desc mt-5\">\n                <h2>{props.desc ? props.desc : \"\"}</h2>\n            </div>\n        </div>\n    );\n}\n\n\nexport default Weather;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Form from './components/form.component';\nimport Weather from './components/weather.component';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'weather-icons/css/weather-icons.min.css';\n\nconst API_KEY = \"342784716f15015c3ab42826b3213687\";\n\nfunction App() {\n\n  const [icon, setIcon] = useState(undefined);\n  const [cityandcountry, setCityandcountry] = useState(undefined);\n  // const [country, setCountry] = useState(undefined);\n  const [mintemp, setMintemp] = useState(undefined);\n  const [maxtemp, setMaxtemp] = useState(undefined);\n  const [temp, setTemp] = useState(undefined);\n  const [desc, setDesc] = useState(undefined);\n  const [error, setError] = useState(false);\n\n  const getWeather = async (e) => {\n    e.preventDefault();\n    \n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n\n    if (city && country) {\n\n      await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}`)\n      .then(function (response) {\n        setIcon(response.data.weather[0].icon);\n        setCityandcountry(`${response.data.name}, ${response.data.sys.country}`);\n        // setCountry(response.data.sys.country);\n        setMintemp(`${response.data.main.temp_min}`);\n        setMaxtemp(`${response.data.main.temp_max}`);\n        setTemp(`${response.data.main.temp}`);\n        setDesc(`${response.data.weather[0].description}`);\n        setError(false);\n      })\n    }else{\n      setIcon(undefined);\n      setCityandcountry(undefined);\n      // setCountry(undefined);\n      setMintemp(undefined);\n      setMaxtemp(undefined);\n      setTemp(undefined);\n      setDesc(undefined);\n      setError(true);\n    }\n    \n  }\n\n  return (\n    <div className=\"App\">\n      <Form \n          cityFrom={getWeather} \n      />\n      <Weather \n        setCityandcountry={cityandcountry}\n        // country={country}\n        icon={icon}\n        mintemp={mintemp}\n        maxtemp={maxtemp}\n        temp={temp}\n        desc={desc}\n        error={error}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}